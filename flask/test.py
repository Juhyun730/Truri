# -*- coding: utf-8 -*-
import ast
import subprocess
import sys
import json
from runModel import runModel
from naver_crawling import naver_crawling
from check_text import check_text

if __name__ == '__main__':

    # naver_crawling("청파동 맛집", '1')
    text = "청파동 맛집 마포구이마당 삼겹살 맛집 안녕하세요! 요즘 날씨가 어마어마하게 추워져서 따뜻한 음식이 엄청 땡기더라구요 얼마 전 주말 저녁에 삼겹살을 먹으러 청파동 맛집 마포구이마당에 다녀왔는데요 가격도 합리적이고 밑반찬도 푸짐~해서 손님들의 발길이 끊이지 않았던 곳이였어요 :) 숙대 앞에 간 김에 한입소반에서 김밥도 사오고 간단한 데이트를 즐긴 날 ㅎㅎㅎ 청파동 맛집 마포구이마당 숙대직영점은 무한리필 점심식사 메뉴도 있더라구요 참고로 주차공간은 없어요! 저희가 차를 가져가려고 주차정보를 계~속 알아봤는데 블로그마다 가게 앞에 주차 가능하다 가게 맞은편에 주차공간이 있다 다 말이 달라서 헷갈렸거든요 근데 가게 맞은편에 있는 주차공간은 다른 건물 전용 주차공간이고 주차공간은 없습니다 ! 주차 불가능해요ㅠㅠ 저희는 도보 5분 거리의 '청파동청사 공영주차장' 을 이용했어요 :) 손님이 너무 많아서 가게 내부사진은 못 찍었지만! 마포구이마당 메뉴는 이러해요 가격이 저렴한 옛날삼겹부터 통삼겹, 통목살, 통막창, 차돌박이 이렇게 있구요 그 외에도 된장, 계란찜, 볶음밥 등등이 있고 빠질 수 없는 주류도 있어요 :D 반찬이 빨리 나와서 너무 좋았어요 ㅋㅋㅋㅋㅋㅋㅋㅋㅋ기다리는거 못하는 사람이라서,, 먼저 고기 싸먹을 쌈야채와 고추, 그리고 파무침이랑 고기와 함께 구워먹을 감자, 새송이버섯, 마늘, 쌈장도 함께 나왔어요! 그리고 배추김치, 깻잎나물, 파김치! 각자 취향따라 고기에 곁들여서 먹으면 좋을 것 같아요 ㅎㅎㅎ 돼지고기의 느끼함을 잡아주고 개운함을 업시켜주는 밑반찬들+_+ 고기는 먼저 초벌로 구워져서 나오더라구요! 그래서 불판에서는 오래 익히지 않아도 되서 편했어요 ㅋㅋㅋㅋ 그리고 직원분께서 이렇게 먹기 좋게 직접 잘라주셔요 ~ 옆에는 감자사리와 새송이버섯 그리고 한 쪽 옆에는 배추김치와 파무침, 파김치를 가득가득 올려서 엄청 풍성해진 한 상이 완성되었어요 :) 보기만해도 푸짐하고 배부른 한국인의 밥상 ㅋㅋㅋㅋㅋㅋㅋㅋ 청파동 맛집 마포구이마당에서 맛볼 수 있답니다 잘 익은 두툼한 고기 한 점 먼저 먹어보기 확실히 초벌구이가 되어서 나오니 빨리 익어서 넘 좋더라구요 저는 파무침 익은것보다 그냥 날 것 그대로가 좋아서 미리 앞접시에 옮겨놨어요 ㅋㅋㅋㅋㅋㅋㅋ 고기 다 익으면 파무침이랑 같이 먹을 예정 :) 공기밥 시키니 된장찌개도 같이 나오더라구요! 넘 좋아요 ㅋㅋㅋㅋㅋㅋㅋㅋ 젓갈? 맛이 많이 났던 된장찌개에요! 맛이 엄청 깊었어요 청파동 맛집 마포구이마당 가격도 저렴하고 양도 엄청 푸짐해서 확실히 숙대 학생들이 많이 애용할 것 같았어요 ~ 데이트하러들 많이 오실 듯 ㅎㅎㅎ 삼겹살은 오랜만에 먹는 것 같아서 맛나게 먹었어요 그리고 여기 파무침이 또 너무 맛있더라구용 파무침 두 번 정도 리필해 먹은 듯 해요 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ 구운김치랑 파무침이랑 삼겹살 조합 말해뭐해 ㅠㅠ꼭꼭 드세요! 볶음밥도 먹을까 했는데 고기가 두툼하고 양이 많아서 배불러서 실패,,다들 볶음밥까지 꼭 드시고 오세요 #숙대맛집   #청파동맛집   #숙명여대맛집   #마포구이마당 청파동맛집 마포구이마당 위치 주차불가능, 영업시간 11:00~23:00 토, 일 16:00~23:00 <본 포스팅은 '핫블체험단' 을 통해 서비스를 제공 받아 작성된 후기입니다.>"
    print(check_text(text))

    # result = subprocess.check_output([sys.executable, 'naver_crawling.py', "헤라쿠션", '1'], shell=True, encoding='utf-8')
    # result = result.split("\n")
    #
    # print(len(result))
    #
    # items = []
    # for item in result:
    #     print(item)
    #     try :
    #         tmp = ast.literal_eval(item)
    #         print(type(tmp))
    #         items.append(tmp)
    #     except Exception as e :
    #         print(e)

    print("subprocess finished")